{"version":3,"sources":["components/Header.jsx","helper.js","components/Formulario.jsx","components/Resumen.jsx","components/Resultado.jsx","components/Spinner.jsx","App.js","index.js"],"names":["Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","styled","div","Label","label","Select","select","InputRadio","input","Button","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","ObtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","console","log","parseFloat","toFixed","setTimeout","cotizacion","Number","htmlFor","onChange","type","checked","ContenedorResumen","Resumen","protoType","PropTypes","object","isRequired","Mensaje","p","TextoCotizacion","ResultadoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorForumario","App","yaer","resumen","cargando","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78efedc7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../assets/styles/components/Header.scss';\r\n\r\n\r\nconst Header = ({ titulo }) => {\r\n\r\n    return(\r\n        <header>\r\n            <h1>{titulo}</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","export function ObtenerDiferenciaYear(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n//Calcula el total a pagar segun la marca\r\nexport function calcularMarca(marca){\r\n\r\n    let incremento \r\n\r\n    switch(marca) {\r\n        \r\n        case 'europeo':\r\n            incremento = 1.3;  \r\n            break; \r\n\r\n        case 'americano': \r\n            incremento = 1.15; \r\n            break; \r\n        \r\n        case 'asiatico': \r\n            incremento = 1.05; \r\n            break;     \r\n\r\n        default: \r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n\r\n}\r\n\r\n//Calcula el tipo de seguro \r\nexport function obtenerPlan( plan ){\r\n    return( plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\n//Muestra la primer letra mayuscula \r\nexport function primerMayuscula( texto ){\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\n//importando funcion desde Helper \r\nimport { ObtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper'\r\n\r\nconst Campo = styled.div`\r\n  display: flex; \r\n  margin-bottom: 1rem; \r\n  align-items: center; \r\n`;\r\n\r\nconst Label = styled.label`\r\n  flex: 0 0 100px; \r\n`;\r\n\r\nconst Select = styled.select`\r\n  display: block; \r\n  width: 100%; \r\n  padding: 1rem;\r\n  border: 1px solid #e1e1e1; \r\n  --webkit-appearance: none;\r\n  --moz-appearance: none;\r\n  appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #00838F; \r\n  font-size: 16px; \r\n  width: 100%; \r\n  padding: 1rem; \r\n  color: #FFF; \r\n  text-transform: uppercase; \r\n  font-weight: bold; \r\n  border: none;\r\n  cursor: pointer; \r\n  transition: all 300ms ease; \r\n  margin-top: 2rem;\r\n\r\n  &:hover{\r\n    background-color: #26c6da;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red; \r\n  color: white; \r\n  padding: 1rem; \r\n  width: 100%;\r\n  text-align: center; \r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst Formulario = ({ guardarResumen, guardarCargando }) => {\r\n\r\n  const [datos, guardarDatos] = useState({\r\n    marca: '',\r\n    year: '',\r\n    plan: '',\r\n  });\r\n\r\n  const [error, guardarError] = useState(false);\r\n\r\n  //Extraer los valores del state: \r\n  const { marca, year, plan } = datos;\r\n\r\n  //Leer los datos del formulario y colocarlos en el state\r\n  const obtenerInformacion = (e) => {\r\n    guardarDatos({\r\n      ...datos,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  //Cotizar seguro cuando presiona submit\r\n  const cotizarSeguro = (e) => {\r\n    e.preventDefault();\r\n    if (marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n      guardarError(true);\r\n      return;\r\n    }\r\n    guardarError(false);\r\n\r\n    //Tenemos una base de 2000 dolares por seguro \r\n    let resultado = 2000;\r\n\r\n    //Obtener la diferencia en años\r\n    const diferencia = ObtenerDiferenciaYear(year);\r\n\r\n\r\n    //Por cada año hay que restar 3% del valor \r\n    resultado -= ((diferencia * 3) * resultado) / 100;\r\n\r\n    //Europeo 30%\r\n    //Americano 15% \r\n    //Asiatico 5%\r\n    resultado *= calcularMarca(marca);\r\n\r\n    //Basico aumenta 20%\r\n    // completo 50%\r\n    const incrementoPlan = obtenerPlan(plan);\r\n    console.log(incrementoPlan);\r\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n    guardarCargando(true);\r\n    \r\n    setTimeout(() => {\r\n\r\n      //Se elimina el Spinner\r\n      guardarCargando(false);\r\n\r\n      //total\r\n      guardarResumen({\r\n        cotizacion: Number(resultado),\r\n        datos: datos\r\n      });\r\n    }, 3000);\r\n\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={cotizarSeguro}\r\n    >\r\n\r\n      {error ? <Error> Todos los campos son obligatorios </Error> : null}\r\n\r\n      <Campo>\r\n        <Label htmlFor=\"\">Marca:</Label>\r\n        <Select\r\n          name=\"marca\"\r\n          value={marca}\r\n          onChange={obtenerInformacion}\r\n        >\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"americano\">Americano</option>\r\n          <option value=\"europeo\">Europeo</option>\r\n          <option value=\"asiatico\">Asiatico</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label htmlFor=\"\">Año:</Label>\r\n        <Select\r\n          name=\"year\"\r\n          value={year}\r\n          onChange={obtenerInformacion}\r\n        >\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label htmlFor=\"\">Plan:</Label>\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"basico\"\r\n          checked={plan === \"basico\"}\r\n          onChange={obtenerInformacion}\r\n        /> Basico\r\n\r\n        <InputRadio\r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          value=\"completo\"\r\n          checked={plan === \"completo\"}\r\n          onChange={obtenerInformacion}\r\n        /> completo\r\n      </Campo>\r\n      <Button type=\"submit\">Cotizar</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nFormulario.propTypes={\r\n  guardarResumen:  PropTypes.func.isRequired,\r\n  guardarCargando: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled'\r\n\r\nimport { primerMayuscula } from '../helper'\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center; \r\n    background-color: #00838F; \r\n    color: white;\r\n    margin-top: 1rem;\r\n`;\r\n\r\n\r\nconst Resumen = ({ datos }) => {\r\n\r\n    const { marca, year, plan } = datos;\r\n\r\n    if (marca === '' || year === '' || plan === '') return null;\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n          <h2>Resumen de cotizacion</h2>\r\n            <ul>\r\n                <li>Marca: {primerMayuscula(marca)} </li>\r\n                <li>Año: {primerMayuscula(year)} </li>\r\n                <li>Plan: {primerMayuscula(plan)} </li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n}; \r\n\r\nResumen.protoType = {\r\n    datos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Resumen;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst Mensaje = styled.p`\r\n  background-color: rgb(127, 224, 237); \r\n  margin-top: 2rem;\r\n  padding: 1rem; \r\n  text-align: center; \r\n  color: #00838F;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n  color: #00838f; \r\n  padding: 1rem; \r\n  font-weight: 600; \r\n  margon: 0; \r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n  text-align: center; \r\n  padding: 0.5rem; \r\n  border: solid 1px #26c6da; \r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 1rem; \r\n  position: relative;\r\n`;\r\n\r\nconst Resultado = ({ cotizacion }) => {\r\n\r\n  return (\r\n    (cotizacion === 0)\r\n      ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n      : (<ResultadoCotizacion>\r\n        <TransitionGroup\r\n          component=\"span\"\r\n          className=\"resultado\"\r\n        >\r\n          <CSSTransition\r\n          classNames=\"resultado\"\r\n          key={cotizacion}\r\n          timeout={{ enter:500, exit: 500 }}\r\n          >\r\n            <TextoCotizacion>El Total a pagar es: <span>${cotizacion}</span> </TextoCotizacion>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </ResultadoCotizacion>)\r\n  );\r\n};\r\n\r\nResultado.propTypes = {\r\n  cotizacion: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Resultado;","import React from 'react'\r\nimport '../assets/styles/components/Spinner.scss'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"sk-circle\">\r\n      <div className=\"sk-circle1 sk-child\"></div>\r\n      <div className=\"sk-circle2 sk-child\"></div>\r\n      <div className=\"sk-circle3 sk-child\"></div>\r\n      <div className=\"sk-circle4 sk-child\"></div>\r\n      <div className=\"sk-circle5 sk-child\"></div>\r\n      <div className=\"sk-circle6 sk-child\"></div>\r\n      <div className=\"sk-circle7 sk-child\"></div>\r\n      <div className=\"sk-circle8 sk-child\"></div>\r\n      <div className=\"sk-circle9 sk-child\"></div>\r\n      <div className=\"sk-circle10 sk-child\"></div>\r\n      <div className=\"sk-circle11 sk-child\"></div>\r\n      <div className=\"sk-circle12 sk-child\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled'\r\nimport './assets/styles/index.scss'\r\n\r\n//Componentes\r\nimport Header from './components/Header';\r\nimport Formulario from './components/Formulario'\r\nimport Resumen from './components/Resumen'\r\nimport Resultado from './components/Resultado'\r\nimport Spinner from './components/Spinner'\r\n\r\nconst Contenedor = styled.div`\r\n  width: 60%; \r\n  margin: 3rem auto; \r\n`;\r\n\r\nconst ContenedorForumario = styled.div`\r\n  background-color: #FFF; \r\n  padding: 3rem; \r\n`;\r\n\r\nfunction App() {\r\n\r\n  const [resumen, guardarResumen] = useState({\r\n    cotizacion: 0,\r\n    datos: {\r\n      marca: '',\r\n      yaer: '',\r\n      plan: ''\r\n    }\r\n  })\r\n\r\n  //Estaer Datos\r\n  const { cotizacion, datos } = resumen\r\n\r\n  //Darle logica al spinner \r\n  const [cargando, guardarCargando] = useState(false);\r\n\r\n  return (\r\n    <Contenedor>\r\n      <Header\r\n        titulo='Cotizador de seguros'\r\n      />\r\n\r\n      <ContenedorForumario>\r\n        <Formulario\r\n          guardarResumen={guardarResumen}\r\n          guardarCargando={guardarCargando}\r\n        />\r\n\r\n        {cargando ? <Spinner /> : null}\r\n\r\n        <Resumen\r\n          datos={datos}\r\n        />\r\n\r\n        {!cargando\r\n          ?\r\n          <Resultado\r\n            cotizacion={cotizacion}\r\n          />\r\n          : null\r\n        }\r\n\r\n      </ContenedorForumario>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById('root'));\r\n"],"sourceRoot":""}